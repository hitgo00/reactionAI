{"id":"SJP3","dependencies":[{"name":"/Users/hitgo/Desktop/Projects/hand-gesture/node_modules/@tensorflow/tfjs-core/dist/ops/relu.js.map","includedInParent":true,"mtime":1599767830977},{"name":"/Users/hitgo/Desktop/Projects/hand-gesture/node_modules/@tensorflow/tfjs-core/src/ops/relu.ts","includedInParent":true,"mtime":1599767830977},{"name":"/Users/hitgo/Desktop/Projects/hand-gesture/package.json","includedInParent":true,"mtime":1599767774914},{"name":"/Users/hitgo/Desktop/Projects/hand-gesture/.babelrc","includedInParent":true,"mtime":1599767774914},{"name":"/Users/hitgo/Desktop/Projects/hand-gesture/node_modules/@tensorflow/tfjs-core/package.json","includedInParent":true,"mtime":1599767830977},{"name":"../engine","loc":{"line":17,"column":23},"parent":"/Users/hitgo/Desktop/Projects/hand-gesture/node_modules/@tensorflow/tfjs-core/dist/ops/relu.js","resolved":"/Users/hitgo/Desktop/Projects/hand-gesture/node_modules/@tensorflow/tfjs-core/dist/engine.js"},{"name":"../kernel_names","loc":{"line":18,"column":21},"parent":"/Users/hitgo/Desktop/Projects/hand-gesture/node_modules/@tensorflow/tfjs-core/dist/ops/relu.js","resolved":"/Users/hitgo/Desktop/Projects/hand-gesture/node_modules/@tensorflow/tfjs-core/dist/kernel_names.js"},{"name":"../tensor_util_env","loc":{"line":19,"column":32},"parent":"/Users/hitgo/Desktop/Projects/hand-gesture/node_modules/@tensorflow/tfjs-core/dist/ops/relu.js","resolved":"/Users/hitgo/Desktop/Projects/hand-gesture/node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js"},{"name":"./operation","loc":{"line":20,"column":19},"parent":"/Users/hitgo/Desktop/Projects/hand-gesture/node_modules/@tensorflow/tfjs-core/dist/ops/relu.js","resolved":"/Users/hitgo/Desktop/Projects/hand-gesture/node_modules/@tensorflow/tfjs-core/dist/ops/operation.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.relu=void 0;var e=require(\"../engine\"),r=require(\"../kernel_names\"),n=require(\"../tensor_util_env\"),o=require(\"./operation\");function u(o){const u=(0,n.convertToTensor)(o,\"x\",\"relu\"),t={x:u};return e.ENGINE.runKernelFunc((e,r)=>(r([u]),\"bool\"===u.dtype?u.toInt():e.relu(u)),t,null,r.Relu)}const t=(0,o.op)({relu_:u});exports.relu=t;"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/ops/relu.ts","name":null,"original":{"line":59,"column":7},"generated":{"line":1,"column":0}},{"source":"../../src/ops/relu.ts","name":null,"original":{"line":59,"column":7},"generated":{"line":1,"column":13}},{"source":"../../src/ops/relu.ts","name":null,"original":{"line":59,"column":7},"generated":{"line":1,"column":20}},{"source":"../../src/ops/relu.ts","name":null,"original":{"line":59,"column":7},"generated":{"line":1,"column":35}},{"source":"../../src/ops/relu.ts","name":null,"original":{"line":59,"column":7},"generated":{"line":1,"column":43}},{"source":"../../src/ops/relu.ts","name":null,"original":{"line":59,"column":7},"generated":{"line":1,"column":56}},{"source":"../../src/ops/relu.ts","name":null,"original":{"line":59,"column":7},"generated":{"line":1,"column":57}},{"source":"../../src/ops/relu.ts","name":null,"original":{"line":59,"column":7},"generated":{"line":1,"column":64}},{"source":"../../src/ops/relu.ts","name":null,"original":{"line":59,"column":7},"generated":{"line":1,"column":68}},{"source":"../../src/ops/relu.ts","name":null,"original":{"line":59,"column":7},"generated":{"line":1,"column":76}},{"source":"../../src/ops/relu.ts","name":null,"original":{"line":59,"column":7},"generated":{"line":1,"column":86}},{"source":"../../src/ops/relu.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":88}},{"source":"../../src/ops/relu.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":92}},{"source":"../../src/ops/relu.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":94}},{"source":"../../src/ops/relu.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":102}},{"source":"../../src/ops/relu.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":1,"column":115}},{"source":"../../src/ops/relu.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":1,"column":117}},{"source":"../../src/ops/relu.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":1,"column":125}},{"source":"../../src/ops/relu.ts","name":null,"original":{"line":22,"column":0},"generated":{"line":1,"column":144}},{"source":"../../src/ops/relu.ts","name":null,"original":{"line":22,"column":0},"generated":{"line":1,"column":146}},{"source":"../../src/ops/relu.ts","name":null,"original":{"line":22,"column":0},"generated":{"line":1,"column":154}},{"source":"../../src/ops/relu.ts","name":null,"original":{"line":25,"column":0},"generated":{"line":1,"column":176}},{"source":"../../src/ops/relu.ts","name":null,"original":{"line":25,"column":0},"generated":{"line":1,"column":178}},{"source":"../../src/ops/relu.ts","name":null,"original":{"line":25,"column":0},"generated":{"line":1,"column":186}},{"source":"../../src/ops/relu.ts","name":null,"original":{"line":39,"column":0},"generated":{"line":1,"column":201}},{"source":"../../src/ops/relu.ts","name":null,"original":{"line":39,"column":9},"generated":{"line":1,"column":210}},{"source":"../../src/ops/relu.ts","name":null,"original":{"line":39,"column":33},"generated":{"line":1,"column":212}},{"source":"../../src/ops/relu.ts","name":null,"original":{"line":40,"column":8},"generated":{"line":1,"column":215}},{"source":"../../src/ops/relu.ts","name":null,"original":{"line":40,"column":8},"generated":{"line":1,"column":221}},{"source":"../../src/ops/relu.ts","name":null,"original":{"line":40,"column":13},"generated":{"line":1,"column":224}},{"source":"../../src/ops/relu.ts","name":null,"original":{"line":40,"column":29},"generated":{"line":1,"column":226}},{"source":"../../src/ops/relu.ts","name":null,"original":{"line":40,"column":29},"generated":{"line":1,"column":228}},{"source":"../../src/ops/relu.ts","name":null,"original":{"line":40,"column":29},"generated":{"line":1,"column":245}},{"source":"../../src/ops/relu.ts","name":null,"original":{"line":40,"column":32},"generated":{"line":1,"column":247}},{"source":"../../src/ops/relu.ts","name":null,"original":{"line":40,"column":37},"generated":{"line":1,"column":251}},{"source":"../../src/ops/relu.ts","name":null,"original":{"line":52,"column":8},"generated":{"line":1,"column":259}},{"source":"../../src/ops/relu.ts","name":null,"original":{"line":52,"column":29},"generated":{"line":1,"column":261}},{"source":"../../src/ops/relu.ts","name":null,"original":{"line":52,"column":30},"generated":{"line":1,"column":262}},{"source":"../../src/ops/relu.ts","name":null,"original":{"line":52,"column":33},"generated":{"line":1,"column":264}},{"source":"../../src/ops/relu.ts","name":null,"original":{"line":54,"column":9},"generated":{"line":1,"column":267}},{"source":"../../src/ops/relu.ts","name":null,"original":{"line":54,"column":9},"generated":{"line":1,"column":274}},{"source":"../../src/ops/relu.ts","name":null,"original":{"line":54,"column":16},"generated":{"line":1,"column":276}},{"source":"../../src/ops/relu.ts","name":null,"original":{"line":54,"column":16},"generated":{"line":1,"column":283}},{"source":"../../src/ops/relu.ts","name":null,"original":{"line":42,"column":39},"generated":{"line":1,"column":297}},{"source":"../../src/ops/relu.ts","name":null,"original":{"line":42,"column":40},"generated":{"line":1,"column":298}},{"source":"../../src/ops/relu.ts","name":null,"original":{"line":42,"column":49},"generated":{"line":1,"column":300}},{"source":"../../src/ops/relu.ts","name":null,"original":{"line":43,"column":4},"generated":{"line":1,"column":305}},{"source":"../../src/ops/relu.ts","name":null,"original":{"line":43,"column":9},"generated":{"line":1,"column":307}},{"source":"../../src/ops/relu.ts","name":null,"original":{"line":43,"column":10},"generated":{"line":1,"column":308}},{"source":"../../src/ops/relu.ts","name":null,"original":{"line":45,"column":21},"generated":{"line":1,"column":312}},{"source":"../../src/ops/relu.ts","name":null,"original":{"line":45,"column":8},"generated":{"line":1,"column":321}},{"source":"../../src/ops/relu.ts","name":null,"original":{"line":45,"column":11},"generated":{"line":1,"column":323}},{"source":"../../src/ops/relu.ts","name":null,"original":{"line":46,"column":13},"generated":{"line":1,"column":329}},{"source":"../../src/ops/relu.ts","name":null,"original":{"line":46,"column":16},"generated":{"line":1,"column":331}},{"source":"../../src/ops/relu.ts","name":null,"original":{"line":49,"column":11},"generated":{"line":1,"column":339}},{"source":"../../src/ops/relu.ts","name":null,"original":{"line":49,"column":19},"generated":{"line":1,"column":341}},{"source":"../../src/ops/relu.ts","name":null,"original":{"line":49,"column":24},"generated":{"line":1,"column":346}},{"source":"../../src/ops/relu.ts","name":null,"original":{"line":55,"column":22},"generated":{"line":1,"column":350}},{"source":"../../src/ops/relu.ts","name":null,"original":{"line":55,"column":54},"generated":{"line":1,"column":352}},{"source":"../../src/ops/relu.ts","name":null,"original":{"line":55,"column":71},"generated":{"line":1,"column":357}},{"source":"../../src/ops/relu.ts","name":null,"original":{"line":54,"column":9},"generated":{"line":1,"column":359}},{"source":"../../src/ops/relu.ts","name":null,"original":{"line":59,"column":7},"generated":{"line":1,"column":365}},{"source":"../../src/ops/relu.ts","name":null,"original":{"line":59,"column":13},"generated":{"line":1,"column":371}},{"source":"../../src/ops/relu.ts","name":null,"original":{"line":59,"column":20},"generated":{"line":1,"column":374}},{"source":"../../src/ops/relu.ts","name":null,"original":{"line":59,"column":23},"generated":{"line":1,"column":376}},{"source":"../../src/ops/relu.ts","name":null,"original":{"line":59,"column":23},"generated":{"line":1,"column":378}},{"source":"../../src/ops/relu.ts","name":null,"original":{"line":59,"column":23},"generated":{"line":1,"column":382}},{"source":"../../src/ops/relu.ts","name":null,"original":{"line":59,"column":24},"generated":{"line":1,"column":383}},{"source":"../../src/ops/relu.ts","name":null,"original":{"line":59,"column":24},"generated":{"line":1,"column":389}},{"source":"../../src/ops/relu.ts","name":null,"original":{"line":59,"column":7},"generated":{"line":1,"column":393}},{"source":"../../src/ops/relu.ts","name":null,"original":{"line":59,"column":7},"generated":{"line":1,"column":401}},{"source":"../../src/ops/relu.ts","name":null,"original":{"line":59,"column":7},"generated":{"line":1,"column":406}}],"sources":{"../../src/ops/relu.ts":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE, ForwardFunc} from '../engine';\nimport {Relu, ReluInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Computes rectified linear element-wise: `max(x, 0)`.\n *\n * ```js\n * const x = tf.tensor1d([-1, 2, -3, 4]);\n *\n * x.relu().print();  // or tf.relu(x)\n * ```\n * @param x The input tensor. If the dtype is `bool`, the output dtype will be\n *     `int32'.\n */\n/** @doc {heading: 'Operations', subheading: 'Basic math'} */\nfunction relu_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'relu');\n\n  const forward: ForwardFunc<Tensor> = (backend, save) => {\n    save([$x]);\n\n    if ($x.dtype === 'bool') {\n      return $x.toInt();\n    }\n\n    return backend.relu($x);\n  };\n\n  const inputs: ReluInputs = {x: $x};\n\n  return ENGINE.runKernelFunc(\n             forward, inputs as {} as NamedTensorMap, null /* grad */, Relu) as\n      T;\n}\n\nexport const relu = op({relu_});\n"},"lineCount":null}},"error":null,"hash":"59b66f56ed8fde12f2f14757702978ea","cacheData":{"env":{}}}